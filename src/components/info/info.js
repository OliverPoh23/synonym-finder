import React from "react";
import Typography from "@material-ui/core/Typography"
import Box from "@material-ui/core/Box"
import { useTheme } from "@material-ui/core/styles";
import { MaterialUI, NextJS, MerriamWebster } from "../shared/links"
import { useStyles } from "../../styles/main.styles"

const Info = () => {
    const classes = useStyles()
    const theme = useTheme()

    return (

        <div className={classes.root}>
            <h3>
                About The App
            </h3>
            <Box borderLeft={1} borderRight={1} p={2} mb={10}>
                <Typography variant={"subtitle1"}>
                    Context providers are React hooks that allow you to easily access and manipulate state variables across
                    components from a context provider. In addition, reducers sort our queries and their results to construct a client-side cache of your data, which is kept up
                    to date for the duration of the browser's state, and as further queries are run, fetching more results from the API.
                </Typography>
                <br />
                <Typography variant={"subtitle1"}>
                    In this simple application, we integrate state hooks seamlessly with Material UI and Next by wrapping our page inside a HOC.
                    Using this same pattern, we're able to pass down a central store of query result data 1) returned by our Thesaurus API and 2)
                    generated by our saved context history into our React component hierarchy defined inside each page of our Next application.
                    We are able to navigate between views seamlessly with a single page app for the same reason.
                </Typography>
                <br/>
                <Typography variant={"subtitle1"}>
                    On initial page load, while on the server and inside getInitialProps, a serversidestylesheet is invoked along with
                    results generated from a random word.

                    On every query, we call the api...

                    This example relies on {MaterialUI} for its styling, {MerriamWebster} API for data, and {NextJS} for deployment.
                </Typography>
            </Box>
        </div>
    );
}

export default Info;