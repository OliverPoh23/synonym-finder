import React from 'react';
import Typography from '@material-ui/core/Typography';
import Box from '@material-ui/core/Box';
import { useTheme } from '@material-ui/core/styles';
import { MaterialUI, NextJS, MerriamWebster, CodeInstitute, MS2 } from '../shared/links';
import { useStyles } from '../../styles/main.styles';

const Info = () => {
  const classes = useStyles();
  const theme = useTheme();

  return (

    <div className={classes.root}>
      <h3>
        About The App
      </h3>
      <Box borderLeft={1} borderRight={1} p={2} mb={10}>
        <Typography>
          Remember all the words you find when you use a Thesaurus.
        </Typography>
        <br />
        <Typography variant="subtitle1">
          This app uses Context API to offer a more meaningful experience with a thesaurus. Context providers are React hooks that allow us to easily access and manipulate state variables across
          components from a context provider. Reducers sort our queries and their results to construct a client-side cache of our data, which is kept up
          to date for the duration of the browser's state, and continue building a repository of synonyms while you fetch more results from the API.
        </Typography>
        <br />
        <Typography variant="subtitle1">
          In this simple application, we integrate these state hooks seamlessly with {MaterialUI} and {NextJS} by wrapping the app inside a higher-order component.
          Using this same pattern, we are able to pass down a central store of query result data 1) returned by our Thesaurus API and 2)
          generated by our context provider into our React component hierarchy, defined inside each view of the application.
          We are able to navigate between views seamlessly with a single-page app for the same reason.
        </Typography>
        <br />
        <Typography variant="subtitle1">
          On initial page load, while on the server and inside getInitialProps, a serverSideStylesheet is invoked along with
          results randomly generated from a curated list of words.
        </Typography>
        <br/>
        <Typography variant="subtitle1">
          The application is developed as part of MS2 Interactive Front End module at {CodeInstitute}. It is written for
          {MerriamWebster}'s format, developed with React via {NextJS}, and deployed with Vercel. View the Github Repository {MS2}.
        </Typography>
      </Box>
    </div>
  );
};

export default Info;
